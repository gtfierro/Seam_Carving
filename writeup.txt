We implemented a seam carving system for content-aware image resizing as described in Shai Avidan and Ariel Shamir's 2007 paper. Since this image resizing is useful for dynamic web pages, we implemented the system in Javascript, allowing it's use in any web page. We used the HTML 5 canvas element to draw and manipulate the image data.


Seam carving attempts to change the aspect ratio or size of a picture while preserving the important content. Ideally, we would first remove the "lowest energy" pixels from the image to preserve the most important features. Doing this, however will create artifacts and not preserve the rectangular shape of the image. To balance removing low energy pixels while minimizing artifacts, we remove seams from the image that connect opposite ends of the image in a connected path. For example, a vertical seam on the image contains one pixel from each row, forming a connected path from top to bottom. To shrink the image, the lowest energy seam is removed and the process is repeated until the desired dimensions are reached.

To find the minimum energy seam, we first need to define an energy function. We used the gradient magnitude, though a number of other energy functions may work better for specific images. We found the gradient magnitude worked fine for most images. Once we have the pixel energies, we run a simple dynamic program which calculates the minimum energy path to each pixel. For example, when finding vertical path, we first initialized the top row of our dynamic programming matrix, M, to zero. Then we go down row by row in the image, setting each element of M to the energy of the corresponding pixel plus the minimum energy of the 3 possibly path pixels "above"(the pixel directly above and the upper left and right diagonal). Once's we've computed every value of M, we simply find the lowest value of M in the bottom row, and return the corresponding path as our minimum energy seam.

To expand the image beyond it's original dimensions, we run a similar operation to seam removal, but add an additional seam of pixels instead of removing it. The pixel values 